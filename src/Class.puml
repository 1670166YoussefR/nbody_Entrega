@startuml
skinparam classAttributeIconSize 0

class Main {
  + main(args: String[]): void
}

class NBodySimulator {
  - universe : Universe
  - timeStep: double
  - pauseTime: int
  - trace: boolean
  - integrator: Integrator
  + NBodySimulator(u: Universe, dt: double, pt: int, trace: boolean, integrator: Integrator)
  - createCanvas(): void
  - drawUniverse(): void
  + simulate(): void
}

class Universe {
  - numBodies: int
  - radius: double
  - bodies: Body[]
  + Universe(fname: String)
  + Universe(bodies: Body[], radius: double)
  + getRadius() : double
  + getNumBodies() : int
  + getPosition(i: int) : Vector
  + getRadius(): double
}

class Body {
  - r : Vector
  - v : Vector
  - mass : double
  - G : double
  {static} - DEFAULT_G : double
  + Body(r: Vector, v: Vector, mass: double)
  + Body(r: Vector, v: Vector, mass: double, G: double)
  + getBodyPosition() : Vector
  + getBodyVelocity() : Vector
  + setPosition(r: Vector) : void
  + setVelocity(v: Vector) : void
  + getMass() : double
  + move(f: Vector, dt: double): void
  + forceFrom(b: Body): Vector
  + getPosition(): Vector
  + toString(): String
}

class Vector {
  - n : int
  - data: double[]
  + Vector(n: int)
  + Vector(data: double[])
  + length() : int
  + dot(v: Vector) : double
  + magnitude() : double
  + plus(v: Vector): Vector
  + minus(v: Vector): Vector
  + cartesian(i: int) : double
  + scale(k: double): Vector
  + magnitude(): double
  + direction(): Vector
  + cartesian(i: int): double
}

class UniverseFactory {
  {static} + makeUniverseFromFile(fname: String): Universe
  {static} + makeCentralConfiguration(numBodies: int, angleVelPos: double): Universe
  {static} + makePlanetaryConfiguration(numPlanets: int): Universe
  {static} + makeChoreography(choreoFile: String, nchoreography: int): Universe
}

interface Integrator {
  + step(u: Universe, dt: double): void
}

class EulerIntegrator implements Integrator {
  + step(u: Universe, dt: double): void
}

class LeapfrogIntegrator implements Integrator {
  + step(u: Universe, dt: double): void
}

' Relaciones
Main ..> UniverseFactory
Main --> NBodySimulator
UniverseFactory ..> Universe
NBodySimulator *-- "1" Universe
NBodySimulator *-- "1" Integrator
Universe *-- "1..*" Body
Body --> "2" Vector
EulerIntegrator ..|> Integrator
LeapfrogIntegrator ..|> Integrator
@enduml
