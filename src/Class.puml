@startuml
skinparam classAttributeIconSize 0

class Main {
  + main(args: String[]): void
}

class NBodySimulator {
  - timeStep: double
  - pauseTime: int
  - trace: boolean
  - universe: Universe
  + NBodySimulator(u: Universe, dt: double, pt: int, trace: boolean)
  + simulate(): void
  - drawUniverse(): void
  - createCanvas(): void
}

class Universe {
  - numBodies: int
  - radius: double
  - bodies: Body[]
  + Universe(fname: String)
  + update(dt: double): void
  + getBodyPosition(i: int): Vector
  + getNumBodies(): int
  + getRadius(): double
}

class Body {
  - position: Vector
  - velocity: Vector
  - mass: double
  + Body(r: Vector, v: Vector, mass: double)
  + move(f: Vector, dt: double): void
  + forceFrom(b: Body): Vector
  + getPosition(): Vector
  + toString(): String
}

class Vector {
  - data: double[]
  + Vector(vals: double[])
  + plus(v: Vector): Vector
  + minus(v: Vector): Vector
  + scale(k: double): Vector
  + magnitude(): double
  + direction(): Vector
  + cartesian(i: int): double
}

class UniverseFactory {
  {static} + makeUniverseFromFile(fname: String): Universe
  {static} + makeCentralConfiguration(numBodies: int, angleVelPos: double): Universe
  {static} + makePlanetaryConfiguration(numPlanets: int): Universe
  {static} + makeChoreography(nchoreography: int): Universe
}

Main --> NBodySimulator
Main ..> UniverseFactory
UniverseFactory --> Universe
NBodySimulator --> Universe
Universe *-- Body
Body --> Vector
Universe --> Vector
@enduml
